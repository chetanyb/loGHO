import { Balances, Chain, ChainId, Networks, Profile } from '../src/types';
export declare const rfc3339: (d: Date) => string;
/**
 * The message to be signed when placing an order.
 *
 * @returns string
 */
export declare const placeOrderMessage: (amount: string | number, receiver: string, chainId?: number, currency?: 'eur' | 'gbp' | 'usd' | 'isk') => string;
/**
 * Replacement for URLSearchParams, Metamask snaps do not include node globals.
 * It will not handle all special characters the same way as URLSearchParams, but it will be good enough for our use case.
 * @param body a json format of the body to be encoded
 * @returns 'application/x-www-form-urlencoded' compatible string
 */
export declare const urlEncoded: (body: Record<string, string>) => string | undefined;
/**
 * Get the corresponding Monerium SDK Chain from the current chain id
 * @returns The Chain
 */
export declare const getChain: (chainId: number) => Chain;
/**
 * Get the corresponding Monerium SDK Network from the current chain id
 * @returns The Network
 */
export declare const getNetwork: (chainId: number) => Networks;
export declare const getIban: (profile: Profile, address: string, chainId: number) => string;
export declare const getAmount: (balances?: Balances[], address?: string, chainId?: ChainId) => string;
export declare const mapChainAndNetwork: (body: any) => any;
